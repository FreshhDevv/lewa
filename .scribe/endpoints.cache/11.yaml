## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Student Endpoints'
description: |-


  API endpoints for students
endpoints:
  -
    httpMethods:
      - GET
    uri: api/students
    metadata:
      groupName: 'Student Endpoints'
      groupDescription: |-


        API endpoints for students
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all students.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {token} required A valid Sanctum token.'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "students": [
                {
                  "id": 1,
                  "userId": 3,
                  "gender": "male",
                  "status": "single",
                  "dob": "1985-02-02",
                  "placeOfBirth": "Lake Alberto",
                  "address": "Buea",
                  "phone": "+1.720.344.2464",
                  "region": null,
                  "nationalIdentification": 123456789,
                  "country": "Cameroon",
                  "matriculationNumber": "FE19A102",
                  "level": "200",
                  "year": "1970",
                  "program": "software",
                  "certificateObtained": "A level",
                  "yearObtained": "2018",
                  "guardianFirstName": "Olivier",
                  "guardianLastName": "Twist",
                  "guardianEmail": "anabelle.hand@cartwright.net",
                  "guardianAddress": "North Orion",
                  "guardianPhone": "+1-484-369-2847",
                  "created_at": "2023-07-11T12:20:36.000000Z",
                  "updated_at": "2023-07-11T12:20:36.000000Z",
                  "user": {
                    "id": 3,
                    "firstName": "Billy",
                    "lastName": "Hans",
                    "email": "billyhans@gmail.com",
                    "profilePicture": null,
                    "status": "active",
                    "created_at": "2023-07-11T12:20:36.000000Z",
                    "updated_at": "2023-07-11T12:20:36.000000Z",
                    "faculties": [
                       {
                         "id": 1,
                         "name": "Faculty of Engineering and Technology",
                         "code": 516,
                         "slug": "FET",
                         "about": "Qui omnis et quibusdam. Vel eos odio aspernatur. Sunt sunt sed beatae earum molestiae.",
                         "created_at": "2023-07-11T12:20:36.000000Z",
                         "updated_at": "2023-07-11T12:20:36.000000Z",
                         "pivot": {
                           "userId": 3,
                           "facultyId": 1
                          }
                        }
                      ],
                     "departments": [
                       {
                         "id": 1,
                         "facultyId": 1,
                         "name": "Computer Engineering",
                         "slug": "ce",
                         "created_at": "2023-07-11T12:20:36.000000Z",
                         "updated_at": "2023-07-11T12:20:36.000000Z",
                         "pivot": {
                         "userId": 3,
                         "departmentId": 1
                         }
                       }
                     ]
                   }
                 }
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/students
    metadata:
      groupName: 'Student Endpoints'
      groupDescription: |-


        API endpoints for students
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a new student.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
      Authorization: 'Bearer {token} required A valid Sanctum token.'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      facultyId:
        name: facultyId
        description: "The ID of the student's faculty."
        required: true
        example: 6
        type: integer
        custom: []
      departmentId:
        name: departmentId
        description: "The ID of the student's department."
        required: true
        example: 17
        type: integer
        custom: []
      firstName:
        name: firstName
        description: 'The first name of the student.'
        required: true
        example: quo
        type: string
        custom: []
      lastName:
        name: lastName
        description: 'The last name of the student.'
        required: true
        example: dolor
        type: string
        custom: []
      email:
        name: email
        description: 'The email address of the student.'
        required: true
        example: muller.bud@example.net
        type: string
        custom: []
      profilePicture:
        name: profilePicture
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        custom: []
      profile_picture:
        name: profile_picture
        description: 'A profile picture for the student.'
        required: false
        example: null
        type: file
        custom: []
      gender:
        name: gender
        description: 'The gender of the student.'
        required: true
        example: odit
        type: string
        custom: []
      status:
        name: status
        description: 'The status of the student.'
        required: true
        example: iure
        type: string
        custom: []
      dob:
        name: dob
        description: 'The date of birth of the student.'
        required: true
        example: mollitia
        type: date
        custom: []
      placeOfBirth:
        name: placeOfBirth
        description: 'The place of birth of the student.'
        required: true
        example: incidunt
        type: string
        custom: []
      address:
        name: address
        description: 'The address of the student.'
        required: true
        example: totam
        type: string
        custom: []
      phone:
        name: phone
        description: 'The phone number of the student.'
        required: true
        example: vitae
        type: string
        custom: []
      region:
        name: region
        description: 'nullable The region of the student.'
        required: false
        example: non
        type: string
        custom: []
      nationalIdentification:
        name: nationalIdentification
        description: 'The national identification number of the student.'
        required: true
        example: et
        type: string
        custom: []
      country:
        name: country
        description: 'The country of the student.'
        required: true
        example: iure
        type: string
        custom: []
      matriculationNumber:
        name: matriculationNumber
        description: 'The matriculation number of the student.'
        required: true
        example: temporibus
        type: string
        custom: []
      level:
        name: level
        description: 'The level of the student.'
        required: true
        example: suscipit
        type: string
        custom: []
      year:
        name: year
        description: 'The year of the student.'
        required: true
        example: 7
        type: integer
        custom: []
      program:
        name: program
        description: 'The program of the student.'
        required: true
        example: est
        type: string
        custom: []
      certificateObtained:
        name: certificateObtained
        description: 'The certificate obtained by the student.'
        required: true
        example: ab
        type: string
        custom: []
      yearObtained:
        name: yearObtained
        description: 'The year the certificate was obtained by the student.'
        required: true
        example: 20
        type: integer
        custom: []
      guardianFirstName:
        name: guardianFirstName
        description: "The first name of the student's guardian."
        required: true
        example: quaerat
        type: string
        custom: []
      guardianLastName:
        name: guardianLastName
        description: "The last name of the student's guardian."
        required: true
        example: illum
        type: string
        custom: []
      guardianEmail:
        name: guardianEmail
        description: "The email address of the student's guardian."
        required: true
        example: coby91@example.com
        type: string
        custom: []
      guardianAddress:
        name: guardianAddress
        description: "The address of the student's guardian."
        required: true
        example: consequatur
        type: string
        custom: []
      guardianPhone:
        name: guardianPhone
        description: "The phone number of the student's guardian."
        required: true
        example: aliquam
        type: string
        custom: []
    cleanBodyParameters:
      facultyId: 6
      departmentId: 17
      firstName: quo
      lastName: dolor
      email: muller.bud@example.net
      gender: odit
      status: iure
      dob: mollitia
      placeOfBirth: incidunt
      address: totam
      phone: vitae
      region: non
      nationalIdentification: et
      country: iure
      matriculationNumber: temporibus
      level: suscipit
      year: 7
      program: est
      certificateObtained: ab
      yearObtained: 20
      guardianFirstName: quaerat
      guardianLastName: illum
      guardianEmail: coby91@example.com
      guardianAddress: consequatur
      guardianPhone: aliquam
    fileParameters:
      profilePicture: null
      profile_picture: null
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "firstName": "John",
            "lastName": "Doe",
            "email": "johndoe@example.com",
            "profilePicture": "http://example.com/profile.jpg",
            "created_at": "2023-07-10T12:00:00Z",
            "updated_at": "2023-07-10T12:00:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/students/show/{id}'
    metadata:
      groupName: 'Student Endpoints'
      groupDescription: |-


        API endpoints for students
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified student with their associated user information, faculties, and departments.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {token} required A valid Sanctum token.'
    urlParameters:
      id:
        name: id
        description: 'The ID of the student to retrieve.'
        required: true
        example: laboriosam
        type: string
        custom: []
    cleanUrlParameters:
      id: laboriosam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
                   "student": [
                  {
                      "id": 1,
                      "userId": 3,
                       "gender": "male",
                       "status": "single",
                       "dob": "1985-02-02",
                       "placeOfBirth": "Lake Alberto",
                       "address": "Buea",
                       "phone": "+1.720.344.2464",
                       "region": null,
                       "nationalIdentification": 123456789,
                       "country": "Cameroon",
                       "matriculationNumber": "FE19A102",
                       "level": "200",
                       "year": "1970",
                       "program": "software",
                       "certificateObtained": "A level",
                       "yearObtained": "2018",
                       "guardianFirstName": "Olivier",
                       "guardianLastName": "Twist",
                       "guardianEmail": "anabelle.hand@cartwright.net",
                       "guardianAddress": "North Orion",
                       "guardianPhone": "+1-484-369-2847",
                       "created_at": "2023-07-11T12:20:36.000000Z",
                       "updated_at": "2023-07-11T12:20:36.000000Z",
                       "user": {
                           "id": 3,
                           "firstName": "Billy",
                           "lastName": "Hans",
                           "email": "billyhans@gmail.com",
                           "profilePicture": null,
                           "status": "active",
                           "created_at": "2023-07-11T12:20:36.000000Z",
                           "updated_at": "2023-07-11T12:20:36.000000Z",
                       "faculties": [
                         {
                           "id": 1,
                           "name": "Faculty of Engineering and Technology",
                           "code": 516,
                           "slug": "FET",
                           "about": "Qui omnis et quibusdam. Vel eos odio aspernatur. Sunt sunt sed beatae earum molestiae.",
                           "created_at": "2023-07-11T12:20:36.000000Z",
                           "updated_at": "2023-07-11T12:20:36.000000Z",
                           "pivot": {
                             "userId": 3,
                             "facultyId": 1
                           }
                         }
                       ],
                       "departments": [
                       {
                           "id": 1,
                           "facultyId": 1,
                           "name": "Computer Engineering",
                           "slug": "ce",
                           "created_at": "2023-07-11T12:20:36.000000Z",
                           "updated_at": "2023-07-11T12:20:36.000000Z",
                           "pivot": {
                           "userId": 3,
                           "departmentId": 1
                           }
                       }
                     ]
                   }
                 }
              ]
            },
            "role": "student"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "The specified student does not exist."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/students/update/{id}'
    metadata:
      groupName: 'Student Endpoints'
      groupDescription: |-


        API endpoints for students
      subgroup: ''
      subgroupDescription: ''
      title: 'Update student.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
      Authorization: 'Bearer {token} required A valid Sanctum token.'
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: inventore
        type: string
        custom: []
    cleanUrlParameters:
      id: inventore
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      facultyId:
        name: facultyId
        description: "The ID of the student's faculty."
        required: true
        example: 14
        type: integer
        custom: []
      departmentId:
        name: departmentId
        description: "The ID of the student's department."
        required: true
        example: 6
        type: integer
        custom: []
      firstName:
        name: firstName
        description: 'The first name of the student.'
        required: true
        example: illo
        type: string
        custom: []
      lastName:
        name: lastName
        description: 'The last name of the student.'
        required: true
        example: et
        type: string
        custom: []
      email:
        name: email
        description: 'The email address of the student.'
        required: true
        example: qbrakus@example.org
        type: string
        custom: []
      profilePicture:
        name: profilePicture
        description: 'Must be an image.'
        required: false
        example: null
        type: file
        custom: []
      profile_picture:
        name: profile_picture
        description: 'A profile picture for the student.'
        required: false
        example: null
        type: file
        custom: []
      gender:
        name: gender
        description: 'The gender of the student.'
        required: true
        example: rerum
        type: string
        custom: []
      status:
        name: status
        description: 'The status of the student.'
        required: true
        example: nulla
        type: string
        custom: []
      dob:
        name: dob
        description: 'The date of birth of the student.'
        required: true
        example: expedita
        type: date
        custom: []
      placeOfBirth:
        name: placeOfBirth
        description: 'The place of birth of the student.'
        required: true
        example: voluptas
        type: string
        custom: []
      address:
        name: address
        description: 'The address of the student.'
        required: true
        example: perferendis
        type: string
        custom: []
      phone:
        name: phone
        description: 'The phone number of the student.'
        required: true
        example: et
        type: string
        custom: []
      region:
        name: region
        description: 'nullable The region of the student.'
        required: false
        example: voluptate
        type: string
        custom: []
      nationalIdentification:
        name: nationalIdentification
        description: 'The national identification number of the student.'
        required: true
        example: voluptas
        type: string
        custom: []
      country:
        name: country
        description: 'The country of the student.'
        required: true
        example: molestias
        type: string
        custom: []
      matriculationNumber:
        name: matriculationNumber
        description: 'The matriculation number of the student.'
        required: true
        example: voluptatum
        type: string
        custom: []
      level:
        name: level
        description: 'The level of the student.'
        required: true
        example: voluptas
        type: string
        custom: []
      year:
        name: year
        description: 'The year of the student.'
        required: true
        example: 12
        type: integer
        custom: []
      program:
        name: program
        description: 'The program of the student.'
        required: true
        example: quis
        type: string
        custom: []
      certificateObtained:
        name: certificateObtained
        description: 'The certificate obtained by the student.'
        required: true
        example: eius
        type: string
        custom: []
      yearObtained:
        name: yearObtained
        description: 'The year the certificate was obtained by the student.'
        required: true
        example: 4
        type: integer
        custom: []
      guardianFirstName:
        name: guardianFirstName
        description: "The first name of the student's guardian."
        required: true
        example: adipisci
        type: string
        custom: []
      guardianLastName:
        name: guardianLastName
        description: "The last name of the student's guardian."
        required: true
        example: ipsum
        type: string
        custom: []
      guardianEmail:
        name: guardianEmail
        description: "The email address of the student's guardian."
        required: true
        example: murazik.avery@example.com
        type: string
        custom: []
      guardianAddress:
        name: guardianAddress
        description: "The address of the student's guardian."
        required: true
        example: atque
        type: string
        custom: []
      guardianPhone:
        name: guardianPhone
        description: "The phone number of the student's guardian."
        required: true
        example: ut
        type: string
        custom: []
    cleanBodyParameters:
      facultyId: 14
      departmentId: 6
      firstName: illo
      lastName: et
      email: qbrakus@example.org
      gender: rerum
      status: nulla
      dob: expedita
      placeOfBirth: voluptas
      address: perferendis
      phone: et
      region: voluptate
      nationalIdentification: voluptas
      country: molestias
      matriculationNumber: voluptatum
      level: voluptas
      year: 12
      program: quis
      certificateObtained: eius
      yearObtained: 4
      guardianFirstName: adipisci
      guardianLastName: ipsum
      guardianEmail: murazik.avery@example.com
      guardianAddress: atque
      guardianPhone: ut
    fileParameters:
      profilePicture: null
      profile_picture: null
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "firstName": "John",
            "lastName": "Doe",
            "email": "johndoe@example.com",
            "profilePicture": "http://example.com/profile.jpg",
            "created_at": "2023-07-10T12:00:00Z",
            "updated_at": "2023-07-10T12:00:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/students/{id}'
    metadata:
      groupName: 'Student Endpoints'
      groupDescription: |-


        API endpoints for students
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a student by ID.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {token} required A valid Sanctum token.'
    urlParameters:
      id:
        name: id
        description: 'The ID of the student to delete.'
        required: true
        example: 4
        type: integer
        custom: []
    cleanUrlParameters:
      id: 4
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Student Deleted Successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
