## Autogenerated by Scribe. DO NOT MODIFY.

name: Authentication
description: |-

  API auth endpoints
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Authentication
      groupDescription: |-

        API auth endpoints
      subgroup: ''
      subgroupDescription: ''
      title: Login.
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {token} required A valid Sanctum token.'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: bradford81@example.org
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: 'd@p@"9)|S|]>{ISme'
        type: string
        custom: []
    cleanBodyParameters:
      email: bradford81@example.org
      password: 'd@p@"9)|S|]>{ISme'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "status": "true",
          "message": "User logged in successfully.",
          "user": {
             "id": 5,
            "firstName": "Dr",
            "lastName": "Gonzo",
             "email": "gonzo@gmail.com",
            "profilePicture": null,
            "status": "active",
            "created_at": "2023-07-16T07:25:15.000000Z",
            "updated_at": "2023-07-16T07:25:15.000000Z"
           },
          "role": "coordinator",
          "accessToken": "2|nkdOWNVEkN7098JhvpeCqzxQgA2zV60KgsBhkjjq",
          "tokenType": "Bearer"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
               "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/logout
    metadata:
      groupName: Authentication
      groupDescription: |-

        API auth endpoints
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/change-password
    metadata:
      groupName: Authentication
      groupDescription: |-

        API auth endpoints
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      oldPassword:
        name: oldPassword
        description: ''
        required: true
        example: quisquam
        type: string
        custom: []
      newPassword:
        name: newPassword
        description: ''
        required: true
        example: debitis
        type: string
        custom: []
    cleanBodyParameters:
      oldPassword: quisquam
      newPassword: debitis
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
